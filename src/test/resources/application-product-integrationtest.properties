#spring.application.name=qu1cksave Backend Tests
# Disable auto table-generation
spring.jpa.hibernate.ddl-auto=none
# Format for Data Source Url (using Postgres):
#   jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
#   Ex. jdbc:postgresql://localhost:5432/my_db_name
#spring.datasource.url=${POSTGRES_HOST} # OLD
#spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB} # Used for dev

# From https://www.baeldung.com/spring-boot-testcontainers-integration-test
#spring.datasource.url=jdbc:tc:postgresql:11.1:///integration-tests-db     # Example from link
#spring.datasource.url=jdbc:tc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/test      # With tc
#spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/test         # No tc
# https://stackoverflow.com/questions/64854784/can-i-have-multiple-docker-compose-yaml-files-in-same-directory
# - (5/7/25) I created a separate docker-compose for the test database
# - (5/8/25) I'm not just relying on the container created by Test Containers,
#    because it doesn't seem to want to use the test docker-compose one
#    -- I'm now just creating the container using PostgreSQL container and setting its properties


#spring.datasource.username=${POSTGRES_USER}
#spring.datasource.password=${POSTGRES_PASSWORD}

# https://www.baeldung.com/spring-boot-testcontainers-integration-test
# IF NEEDED
#spring.datasource.driver-class-name=org.testcontainers.jdbc.ContainerDatabaseDriver